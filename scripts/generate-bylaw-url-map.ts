import fs from 'fs';
import path from 'path';

// Bylaw URL data from the table
interface BylawData {
  number: string;
  title: string;
  url: string;
}

// This is the data extracted from the Oak Bay website
const bylawData: BylawData[] = [
  { 
    number: "4892", 
    title: "Amenity Cost Charge Bylaw", 
    url: "https://www.oakbay.ca/wp-content/uploads/2025/02/4892-Amenity-Cost-Charge-Bylaw.pdf" 
  },
  { 
    number: "4891", 
    title: "Development Cost Charge Bylaw", 
    url: "https://www.oakbay.ca/wp-content/uploads/2025/02/4891-Development-Cost-Charge-Bylaw-2024.pdf" 
  },
  { 
    number: "4861", 
    title: "Tax Rates Bylaw, 2024", 
    url: "https://www.oakbay.ca/wp-content/uploads/2025/02/4861-Tax-Rates-Bylaw.pdf" 
  },
  { 
    number: "4849", 
    title: "Property Tax Exemption Bylaw, 2023", 
    url: "https://www.oakbay.ca/wp-content/uploads/2025/02/4849-Property-Tax-Exemption-2023.pdf" 
  },
  // Add more bylaws here
  { 
    number: "4247", 
    title: "Building and Plumbing Bylaw", 
    url: "https://www.oakbay.ca/wp-content/uploads/2024/03/4247-Building-and-Plumbing-Bylaw-2005-CONSOLIDATED.pdf" 
  },
  { 
    number: "4742", 
    title: "Tree Protection Bylaw", 
    url: "https://www.oakbay.ca/wp-content/uploads/2024/01/4742-Tree-Protection-Bylaw-2020-CONSOLIDATED.pdf" 
  },
  { 
    number: "3210", 
    title: "Anti-Noise Bylaw", 
    url: "https://www.oakbay.ca/sites/default/files/municipal-services/bylaws/3210%20-Anti-Noise%20Bylaw%20-%20Consolidated%20to%204594.pdf" 
  },
  { 
    number: "4100", 
    title: "Streets and Traffic Bylaw", 
    url: "https://www.oakbay.ca/sites/default/files/municipal-services/bylaws/4100-Streets-Traffic-Bylaw-2000.pdf" 
  },
  { 
    number: "3531", 
    title: "Zoning Bylaw", 
    url: "https://www.oakbay.ca/sites/default/files/municipal-services/bylaws/3531_ZoningBylawConsolidation_Aug302024.pdf" 
  }
];

// Generate the knownBylawUrls object
const generateKnownBylawUrls = () => {
  const urlMap: Record<string, string> = {};
  
  bylawData.forEach(bylaw => {
    urlMap[bylaw.number] = bylaw.url;
  });
  
  return urlMap;
};

// Generate the bylaw title map
const generateBylawTitleMap = () => {
  const titleMap: Record<string, string> = {};
  
  bylawData.forEach(bylaw => {
    titleMap[bylaw.number] = bylaw.title;
  });
  
  return titleMap;
};

// Write the maps to a file
const writeUrlMapsToFile = () => {
  const knownBylawUrls = generateKnownBylawUrls();
  const bylawTitleMap = generateBylawTitleMap();
  
  const fileContent = `// Auto-generated bylaw URL and title mappings
// Generated on ${new Date().toISOString()}
// Do not edit manually - use generate-bylaw-url-map.ts to update

export const knownBylawUrls: Record<string, string> = ${JSON.stringify(knownBylawUrls, null, 2)};

export const bylawTitleMap: Record<string, string> = ${JSON.stringify(bylawTitleMap, null, 2)};

// List of all known bylaw numbers
export const VALIDATED_BYLAWS: string[] = ${JSON.stringify(Object.keys(knownBylawUrls), null, 2)};
`;

  // Write to lib/utils/bylaw-maps.ts
  const outputPath = path.resolve(__dirname, '../lib/utils/bylaw-maps.ts');
  fs.writeFileSync(outputPath, fileContent);
  
  console.log(`Bylaw maps written to ${outputPath}`);
  console.log(`Generated maps for ${Object.keys(knownBylawUrls).length} bylaws`);
};

// Execute the function
writeUrlMapsToFile();