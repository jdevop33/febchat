// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Bylaw verification table
model Bylaw {
  bylawNumber     String         @id
  title           String
  isConsolidated  Boolean        @default(false)
  pdfPath         String
  officialUrl     String
  lastVerified    DateTime
  consolidatedDate String?
  enactmentDate   String?
  amendments      String?        // Comma-separated list of amending bylaw numbers
  sections        BylawSection[]
  feedback        CitationFeedback[]
}

// Bylaw sections table
model BylawSection {
  id              String         @id @default(cuid())
  bylawNumber     String
  sectionNumber   String
  title           String?
  content         String
  bylaw           Bylaw          @relation(fields: [bylawNumber], references: [bylawNumber], onDelete: Cascade)

  @@unique([bylawNumber, sectionNumber])
}

// Citation feedback table
model CitationFeedback {
  id              String         @id @default(cuid())
  bylawNumber     String
  section         String
  feedback        String         // 'accurate', 'inaccurate', 'incomplete', 'outdated'
  userComment     String?
  timestamp       DateTime
  bylaw           Bylaw          @relation(fields: [bylawNumber], references: [bylawNumber], onDelete: Cascade)
}

// Vector database entry log
model VectorDatabaseEntry {
  id              String         @id @default(cuid())
  bylawNumber     String
  vectorId        String         // ID used in Pinecone
  section         String?
  timestamp       DateTime
  metadata        Json?
  
  @@unique([bylawNumber, vectorId])
}

// Bylaw update tracking
model BylawUpdate {
  id              String         @id @default(cuid())
  bylawNumber     String
  updateType      String         // 'new', 'amendment', 'consolidation'
  timestamp       DateTime
  details         String?
}

// Web scraping log
model WebScrapeLog {
  id              String         @id @default(cuid())
  url             String
  timestamp       DateTime
  status          String         // 'success', 'error'
  newBylaws       Int            @default(0)
  updatedBylaws   Int            @default(0)
  errorDetails    String?
}

// Search query log for analytics
model SearchQueryLog {
  id              String         @id @default(cuid())
  query           String
  resultCount     Int
  topResult       String?
  timestamp       DateTime
  userFeedback    String?        // 'helpful', 'unhelpful'
}